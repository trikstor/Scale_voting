@{
    var poll = ViewBag.Poll;
    ViewBag.Title = string.Format("Опрос - {0}", Html.Raw(poll.Title));
}
@model ScaleVoting.Models.FormVoting
@Html.AntiForgeryToken()
@Html.ValidationSummary(false)

@using (Html.BeginForm())
{
    <div id="@Html.Raw(poll.Id)" class="card m-2">
        <div class="card-header">
            @Html.Raw(poll.Title)
        </div>
        <p class="card-text">
            @{ 
                var counter = 0;
            }
            @foreach (var question in poll.Questions)
            {
                @Html.Raw(question.Title)
                foreach (var option in question.Options)
                {
                    <div class="form-check">
                       @Html.RadioButtonFor(model => model.Answers[counter], (object)option.Key)
                        <label class="form-check-label" for="@Html.Raw(option.Key)">
                            @Html.Raw(option.OptionContent)
                        </label>
                    </div>
                }
                counter++;
            }
        </p>
        <button type="submit" class="btn btn-primary">Голосовать</button>
    </div>
}

<div class="card-text">
    @foreach(var question  in ViewBag.Statistics)
    {
        <b>@Html.Raw(question.Title)</b>
        <ui>
        @foreach(var option in question.TotalAnswer.Statistics)
        {
            <li>@Html.Raw(option.Key.OptionContent) - @Html.Raw(option.Value)</li>
        }
        </ui>
        <br/>
    }
</div>
